name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  

env:
  ACR_NAME: rbtacr
  RESOURCE_GROUP: Robert-Lordache-Candidate
  CLUSTER_NAME: rbt-aks-cluster
  AZURE_SUBSCRIPTION: b99c0710-ded3-407b-b632-9fb5dd7edd13

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set Azure subscription
      run: |
        az account set --subscription ${{ env.AZURE_SUBSCRIPTION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.ACR_NAME }}.azurecr.io/2bcloud-app:latest
          ${{ env.ACR_NAME }}.azurecr.io/2bcloud-app:${{ github.sha }}
    
    - name: Update image in deployment
      run: |
        # Replace the image tag in deployment.yaml
        sed -i "s|\${{ env.ACR_NAME }}.azurecr.io/2bcloud-app:latest|${{ env.ACR_NAME }}.azurecr.io/2bcloud-app:${{ github.sha }}|g" kubernetes/deployment.yaml
        
        # Verify the replacement
        cat kubernetes/deployment.yaml | grep "image:"

    - name: Get Kube Config
      run: |
        # Get kubeconfig with admin credentials
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --admin --file kubeconfig --overwrite-existing
        
        # Set KUBECONFIG environment variable
        export KUBECONFIG=$GITHUB_WORKSPACE/kubeconfig
        echo "KUBECONFIG=$KUBECONFIG" >> $GITHUB_ENV
        
        # Set the context
        kubectl config use-context "${{ env.CLUSTER_NAME }}-admin"
        
        # Verify kubectl can connect
        kubectl config current-context
        kubectl cluster-info
        
    - name: Deploy Kubernetes manifests
      run: |
        # Make sure kubectl is using the correct config
        export KUBECONFIG=$GITHUB_WORKSPACE/kubeconfig
        kubectl config use-context "${{ env.CLUSTER_NAME }}-admin"
        
        # Apply Kubernetes manifests
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/hpa.yaml
        
        # Verify deployment
        kubectl get pods -n default
        kubectl get svc -n default

    - name: Verify deployment
      run: |
        # Make sure kubectl is using the correct config
        export KUBECONFIG=$GITHUB_WORKSPACE/kubeconfig
        
        # Wait for pods to be ready
        kubectl wait --for=condition=ready pod -l app=2bcloud-app --timeout=300s
        
        # Get service URL
        echo "Waiting for LoadBalancer IP to be assigned..."
        kubectl get svc rbt-app-service -w
        
        # Get service details
        SERVICE_IP=$(kubectl get service rbt-app-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}' --ignore-not-found)
        if [ -z "$SERVICE_IP" ]; then
          echo "Error: Could not get service IP. Service details:"
          kubectl describe svc rbt-app-service
          exit 1
        fi
        
        echo "Application URL: http://$SERVICE_IP"
        echo "Application deployed at: http://$SERVICE_IP"
        
        # Run smoke test
        echo "Running smoke test..."
        curl -v http://$SERVICE_IP/healthz
